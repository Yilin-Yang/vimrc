snippet json_assert
static_assert(is_json_convertible<$1>::value,
              "All saveable data types must be constructible from and "
              "reducible to a JSON struct!");
endsnippet

snippet pragma_once
#ifndef $1_H
#define $1_H

$0

#endif // $1_H
endsnippet

snippet gazebo-template
namespace gazebo
{
{

/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
class $1
{
public:

    $1() = default;

}; // class $1

} // namespace gazebo
endsnippet

snippet json_ctor
    virtual void from_json(const nlohmann::json&) override;

    virtual nlohmann::json to_json() override;
endsnippet

snippet maav-template
namespace maav
{

namespace $1
{

/**
 * @brief $3
 * @author Yilin Yang (yiliny@umich.edu)
 */
class $2
{
public:

	$2() = default;$0

}; // class $2

} // namespace $1

} // namespace maav
endsnippet

snippet tab-function-template
	/**
	 * @$5 $6
	 */
	$1 $2($3)$4
endsnippet

snippet maav-namespace
namespace maav
{

namespace $1
{

$0

} // namespace $1

} // namespace maav
endsnippet

snippet boost-test-file
#define BOOST_TEST_MODULE "$1"
#include <boost/test/unit_test.hpp>
$0
endsnippet

snippet boost-auto-test-case
BOOST_AUTO_TEST_CASE($1)
{
	$0
}
endsnippet

snippet class-template
/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
class $1
{
public:

    $1() = default;$0

}; // class $1
endsnippet

snippet struct-template
/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
struct $1
{

    $1() = default;$0

}; // struct $1
endsnippet

snippet doxygen
/**
 * @$1
 */
endsnippet

snippet ifdef
#ifdef $1
$0
#endif // $1
endsnippet

snippet object_type_print_case
case (maav::sim::ObjectType::$1):
	type_name = "$1";
	break;
$0
endsnippet

snippet namespace
namespace $1
{

$0

} // namespace $1
endsnippet

snippet enum-class
/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
enum class $1
{
    $0
}; // enum class $1
endsnippet

snippet rospragma
// MIT License
//
// Copyright (c) 2018 Yilin Yang
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#ifndef $1_H
#define $1_H

$0

#endif // $1_H
endsnippet

snippet rosclass
/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
class $1
{
public:

  $1() = default;

}; // class $1
endsnippet

snippet rosstruct
/**
 * @brief $2
 * @author Yilin Yang (yiliny@umich.edu)
 */
struct $1
{
public:

  $1() = default;

}; // struct $1
endsnippet
